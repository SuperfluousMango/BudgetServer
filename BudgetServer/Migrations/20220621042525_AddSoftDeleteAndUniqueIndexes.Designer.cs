// <auto-generated />
using System;
using BudgetServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetServer.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20220621042525_AddSoftDeleteAndUniqueIndexes")]
    partial class AddSoftDeleteAndUniqueIndexes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BudgetServer.Data.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetimeoffset(0)");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("Expense", (string)null);
                });

            modelBuilder.Entity("BudgetServer.Data.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExpenseCategoryGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryGroupId");

                    b.HasIndex("Name", "ExpenseCategoryGroupId")
                        .IsUnique();

                    b.ToTable("ExpenseCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpenseCategoryGroupId = 1,
                            Name = "Mortgage"
                        },
                        new
                        {
                            Id = 2,
                            ExpenseCategoryGroupId = 1,
                            Name = "Water bill"
                        },
                        new
                        {
                            Id = 3,
                            ExpenseCategoryGroupId = 1,
                            Name = "Electric bill"
                        },
                        new
                        {
                            Id = 4,
                            ExpenseCategoryGroupId = 1,
                            Name = "Gas bill"
                        });
                });

            modelBuilder.Entity("BudgetServer.Data.Models.ExpenseCategoryGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExpenseCategoryGroup", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("BudgetServer.Data.Models.Expense", b =>
                {
                    b.HasOne("BudgetServer.Data.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("BudgetServer.Data.Models.ExpenseCategory", b =>
                {
                    b.HasOne("BudgetServer.Data.Models.ExpenseCategoryGroup", "ExpenseCategoryGroup")
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("ExpenseCategoryGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategoryGroup");
                });

            modelBuilder.Entity("BudgetServer.Data.Models.ExpenseCategoryGroup", b =>
                {
                    b.Navigation("ExpenseCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
